grammar org.xtext.assingment2.Mathinterpreter with org.eclipse.xtext.common.Terminals

generate mathinterpreter "http://www.xtext.org/assingment2/Mathinterpreter"

Model:
	mathexpression+=MathExpression*
;

MathExpression:
	Function | DefineExpr
;

Function:
	'result' description=STRING 'is' expression=PMExpression
;

DefineExpr:
	(description=STRING 'as')? 'let' variables+=Variable ('and' variables+=Variable)* 'in' expression=PMExpression 'end'
;

Variable:
	name=ID '=' expression=PMExpression
;

External:
	'external.' name=ID '(' arguments+=(VariableName|Number) (',' arguments+=(VariableName|Number))* ')'
;


PMExpression:
    MDExpression ({PMExpression.left=current} operator=PlusMinus right=MDExpression)*
;

MDExpression:
	PowExpression ({MDExpression.left=current} operator=MultiplyDivide right=PowExpression)*
;

PowExpression:
	Primary ({PowExpression.left=current} operator=Power right=Primary)*
;

Power:
	{Pow} '**'
;

PlusMinus:
	{Plus} '+' | {Minus} '-'
;

MultiplyDivide:
	{Multiply} '*' | {Divide} '/'
;

Primary:
	Number | VariableName | PMParenthesis | DefParenthesis | External
;

VariableName:
	name=ID
;

Number:
	Positive | Negative
;

Positive:
	value=INT
;

Negative:
	'-'value=INT
;

PMParenthesis:
	'(' expression=PMExpression ')' 
;

DefParenthesis:
	'(' DefineExpr ')'
;