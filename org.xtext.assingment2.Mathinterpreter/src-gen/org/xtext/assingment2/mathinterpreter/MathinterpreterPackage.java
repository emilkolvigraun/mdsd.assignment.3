/**
 * generated by Xtext 2.21.0
 */
package org.xtext.assingment2.mathinterpreter;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see org.xtext.assingment2.mathinterpreter.MathinterpreterFactory
 * @model kind="package"
 * @generated
 */
public interface MathinterpreterPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "mathinterpreter";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.xtext.org/assingment2/Mathinterpreter";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "mathinterpreter";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  MathinterpreterPackage eINSTANCE = org.xtext.assingment2.mathinterpreter.impl.MathinterpreterPackageImpl.init();

  /**
   * The meta object id for the '{@link org.xtext.assingment2.mathinterpreter.impl.ModelImpl <em>Model</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.assingment2.mathinterpreter.impl.ModelImpl
   * @see org.xtext.assingment2.mathinterpreter.impl.MathinterpreterPackageImpl#getModel()
   * @generated
   */
  int MODEL = 0;

  /**
   * The feature id for the '<em><b>Mathexpression</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__MATHEXPRESSION = 0;

  /**
   * The number of structural features of the '<em>Model</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.assingment2.mathinterpreter.impl.MathExpressionImpl <em>Math Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.assingment2.mathinterpreter.impl.MathExpressionImpl
   * @see org.xtext.assingment2.mathinterpreter.impl.MathinterpreterPackageImpl#getMathExpression()
   * @generated
   */
  int MATH_EXPRESSION = 1;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MATH_EXPRESSION__EXPRESSION = 0;

  /**
   * The number of structural features of the '<em>Math Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MATH_EXPRESSION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.assingment2.mathinterpreter.impl.FunctionImpl <em>Function</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.assingment2.mathinterpreter.impl.FunctionImpl
   * @see org.xtext.assingment2.mathinterpreter.impl.MathinterpreterPackageImpl#getFunction()
   * @generated
   */
  int FUNCTION = 2;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION__EXPRESSION = MATH_EXPRESSION__EXPRESSION;

  /**
   * The feature id for the '<em><b>Description</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION__DESCRIPTION = MATH_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Function</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_FEATURE_COUNT = MATH_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.assingment2.mathinterpreter.impl.DefineExprImpl <em>Define Expr</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.assingment2.mathinterpreter.impl.DefineExprImpl
   * @see org.xtext.assingment2.mathinterpreter.impl.MathinterpreterPackageImpl#getDefineExpr()
   * @generated
   */
  int DEFINE_EXPR = 3;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEFINE_EXPR__EXPRESSION = MATH_EXPRESSION__EXPRESSION;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEFINE_EXPR__LEFT = MATH_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Operator</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEFINE_EXPR__OPERATOR = MATH_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEFINE_EXPR__RIGHT = MATH_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Variables</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEFINE_EXPR__VARIABLES = MATH_EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The number of structural features of the '<em>Define Expr</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEFINE_EXPR_FEATURE_COUNT = MATH_EXPRESSION_FEATURE_COUNT + 4;

  /**
   * The meta object id for the '{@link org.xtext.assingment2.mathinterpreter.impl.VariableImpl <em>Variable</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.assingment2.mathinterpreter.impl.VariableImpl
   * @see org.xtext.assingment2.mathinterpreter.impl.MathinterpreterPackageImpl#getVariable()
   * @generated
   */
  int VARIABLE = 4;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE__NAME = 0;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE__EXPRESSION = 1;

  /**
   * The number of structural features of the '<em>Variable</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.assingment2.mathinterpreter.impl.ExternalImpl <em>External</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.assingment2.mathinterpreter.impl.ExternalImpl
   * @see org.xtext.assingment2.mathinterpreter.impl.MathinterpreterPackageImpl#getExternal()
   * @generated
   */
  int EXTERNAL = 5;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTERNAL__NAME = 0;

  /**
   * The feature id for the '<em><b>Arguments</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTERNAL__ARGUMENTS = 1;

  /**
   * The number of structural features of the '<em>External</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTERNAL_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.assingment2.mathinterpreter.impl.PMExpressionImpl <em>PM Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.assingment2.mathinterpreter.impl.PMExpressionImpl
   * @see org.xtext.assingment2.mathinterpreter.impl.MathinterpreterPackageImpl#getPMExpression()
   * @generated
   */
  int PM_EXPRESSION = 6;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PM_EXPRESSION__LEFT = 0;

  /**
   * The feature id for the '<em><b>Operator</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PM_EXPRESSION__OPERATOR = 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PM_EXPRESSION__RIGHT = 2;

  /**
   * The number of structural features of the '<em>PM Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PM_EXPRESSION_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.assingment2.mathinterpreter.impl.MDExpressionImpl <em>MD Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.assingment2.mathinterpreter.impl.MDExpressionImpl
   * @see org.xtext.assingment2.mathinterpreter.impl.MathinterpreterPackageImpl#getMDExpression()
   * @generated
   */
  int MD_EXPRESSION = 7;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MD_EXPRESSION__LEFT = PM_EXPRESSION__LEFT;

  /**
   * The feature id for the '<em><b>Operator</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MD_EXPRESSION__OPERATOR = PM_EXPRESSION__OPERATOR;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MD_EXPRESSION__RIGHT = PM_EXPRESSION__RIGHT;

  /**
   * The number of structural features of the '<em>MD Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MD_EXPRESSION_FEATURE_COUNT = PM_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.assingment2.mathinterpreter.impl.PowExpressionImpl <em>Pow Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.assingment2.mathinterpreter.impl.PowExpressionImpl
   * @see org.xtext.assingment2.mathinterpreter.impl.MathinterpreterPackageImpl#getPowExpression()
   * @generated
   */
  int POW_EXPRESSION = 8;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POW_EXPRESSION__LEFT = MD_EXPRESSION__LEFT;

  /**
   * The feature id for the '<em><b>Operator</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POW_EXPRESSION__OPERATOR = MD_EXPRESSION__OPERATOR;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POW_EXPRESSION__RIGHT = MD_EXPRESSION__RIGHT;

  /**
   * The number of structural features of the '<em>Pow Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POW_EXPRESSION_FEATURE_COUNT = MD_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.assingment2.mathinterpreter.impl.PowerImpl <em>Power</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.assingment2.mathinterpreter.impl.PowerImpl
   * @see org.xtext.assingment2.mathinterpreter.impl.MathinterpreterPackageImpl#getPower()
   * @generated
   */
  int POWER = 9;

  /**
   * The number of structural features of the '<em>Power</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POWER_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.assingment2.mathinterpreter.impl.PlusMinusImpl <em>Plus Minus</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.assingment2.mathinterpreter.impl.PlusMinusImpl
   * @see org.xtext.assingment2.mathinterpreter.impl.MathinterpreterPackageImpl#getPlusMinus()
   * @generated
   */
  int PLUS_MINUS = 10;

  /**
   * The number of structural features of the '<em>Plus Minus</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PLUS_MINUS_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.assingment2.mathinterpreter.impl.MultiplyDivideImpl <em>Multiply Divide</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.assingment2.mathinterpreter.impl.MultiplyDivideImpl
   * @see org.xtext.assingment2.mathinterpreter.impl.MathinterpreterPackageImpl#getMultiplyDivide()
   * @generated
   */
  int MULTIPLY_DIVIDE = 11;

  /**
   * The number of structural features of the '<em>Multiply Divide</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLY_DIVIDE_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.assingment2.mathinterpreter.impl.PrimaryImpl <em>Primary</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.assingment2.mathinterpreter.impl.PrimaryImpl
   * @see org.xtext.assingment2.mathinterpreter.impl.MathinterpreterPackageImpl#getPrimary()
   * @generated
   */
  int PRIMARY = 12;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY__LEFT = POW_EXPRESSION__LEFT;

  /**
   * The feature id for the '<em><b>Operator</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY__OPERATOR = POW_EXPRESSION__OPERATOR;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY__RIGHT = POW_EXPRESSION__RIGHT;

  /**
   * The number of structural features of the '<em>Primary</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_FEATURE_COUNT = POW_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.assingment2.mathinterpreter.impl.VariableNameImpl <em>Variable Name</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.assingment2.mathinterpreter.impl.VariableNameImpl
   * @see org.xtext.assingment2.mathinterpreter.impl.MathinterpreterPackageImpl#getVariableName()
   * @generated
   */
  int VARIABLE_NAME = 13;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_NAME__LEFT = PRIMARY__LEFT;

  /**
   * The feature id for the '<em><b>Operator</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_NAME__OPERATOR = PRIMARY__OPERATOR;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_NAME__RIGHT = PRIMARY__RIGHT;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_NAME__NAME = PRIMARY_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Variable Name</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_NAME_FEATURE_COUNT = PRIMARY_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.assingment2.mathinterpreter.impl.NumberImpl <em>Number</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.assingment2.mathinterpreter.impl.NumberImpl
   * @see org.xtext.assingment2.mathinterpreter.impl.MathinterpreterPackageImpl#getNumber()
   * @generated
   */
  int NUMBER = 14;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMBER__LEFT = PRIMARY__LEFT;

  /**
   * The feature id for the '<em><b>Operator</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMBER__OPERATOR = PRIMARY__OPERATOR;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMBER__RIGHT = PRIMARY__RIGHT;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMBER__VALUE = PRIMARY_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Number</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMBER_FEATURE_COUNT = PRIMARY_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.assingment2.mathinterpreter.impl.PositiveImpl <em>Positive</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.assingment2.mathinterpreter.impl.PositiveImpl
   * @see org.xtext.assingment2.mathinterpreter.impl.MathinterpreterPackageImpl#getPositive()
   * @generated
   */
  int POSITIVE = 15;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POSITIVE__LEFT = NUMBER__LEFT;

  /**
   * The feature id for the '<em><b>Operator</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POSITIVE__OPERATOR = NUMBER__OPERATOR;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POSITIVE__RIGHT = NUMBER__RIGHT;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POSITIVE__VALUE = NUMBER__VALUE;

  /**
   * The number of structural features of the '<em>Positive</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POSITIVE_FEATURE_COUNT = NUMBER_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.assingment2.mathinterpreter.impl.NegativeImpl <em>Negative</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.assingment2.mathinterpreter.impl.NegativeImpl
   * @see org.xtext.assingment2.mathinterpreter.impl.MathinterpreterPackageImpl#getNegative()
   * @generated
   */
  int NEGATIVE = 16;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NEGATIVE__LEFT = NUMBER__LEFT;

  /**
   * The feature id for the '<em><b>Operator</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NEGATIVE__OPERATOR = NUMBER__OPERATOR;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NEGATIVE__RIGHT = NUMBER__RIGHT;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NEGATIVE__VALUE = NUMBER__VALUE;

  /**
   * The number of structural features of the '<em>Negative</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NEGATIVE_FEATURE_COUNT = NUMBER_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.assingment2.mathinterpreter.impl.PMParenthesisImpl <em>PM Parenthesis</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.assingment2.mathinterpreter.impl.PMParenthesisImpl
   * @see org.xtext.assingment2.mathinterpreter.impl.MathinterpreterPackageImpl#getPMParenthesis()
   * @generated
   */
  int PM_PARENTHESIS = 17;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PM_PARENTHESIS__LEFT = PRIMARY__LEFT;

  /**
   * The feature id for the '<em><b>Operator</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PM_PARENTHESIS__OPERATOR = PRIMARY__OPERATOR;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PM_PARENTHESIS__RIGHT = PRIMARY__RIGHT;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PM_PARENTHESIS__EXPRESSION = PRIMARY_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>PM Parenthesis</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PM_PARENTHESIS_FEATURE_COUNT = PRIMARY_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.assingment2.mathinterpreter.impl.DefParenthesisImpl <em>Def Parenthesis</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.assingment2.mathinterpreter.impl.DefParenthesisImpl
   * @see org.xtext.assingment2.mathinterpreter.impl.MathinterpreterPackageImpl#getDefParenthesis()
   * @generated
   */
  int DEF_PARENTHESIS = 18;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEF_PARENTHESIS__LEFT = PRIMARY__LEFT;

  /**
   * The feature id for the '<em><b>Operator</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEF_PARENTHESIS__OPERATOR = PRIMARY__OPERATOR;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEF_PARENTHESIS__RIGHT = PRIMARY__RIGHT;

  /**
   * The number of structural features of the '<em>Def Parenthesis</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEF_PARENTHESIS_FEATURE_COUNT = PRIMARY_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.assingment2.mathinterpreter.impl.PowImpl <em>Pow</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.assingment2.mathinterpreter.impl.PowImpl
   * @see org.xtext.assingment2.mathinterpreter.impl.MathinterpreterPackageImpl#getPow()
   * @generated
   */
  int POW = 19;

  /**
   * The number of structural features of the '<em>Pow</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POW_FEATURE_COUNT = POWER_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.assingment2.mathinterpreter.impl.PlusImpl <em>Plus</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.assingment2.mathinterpreter.impl.PlusImpl
   * @see org.xtext.assingment2.mathinterpreter.impl.MathinterpreterPackageImpl#getPlus()
   * @generated
   */
  int PLUS = 20;

  /**
   * The number of structural features of the '<em>Plus</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PLUS_FEATURE_COUNT = PLUS_MINUS_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.assingment2.mathinterpreter.impl.MinusImpl <em>Minus</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.assingment2.mathinterpreter.impl.MinusImpl
   * @see org.xtext.assingment2.mathinterpreter.impl.MathinterpreterPackageImpl#getMinus()
   * @generated
   */
  int MINUS = 21;

  /**
   * The number of structural features of the '<em>Minus</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MINUS_FEATURE_COUNT = PLUS_MINUS_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.assingment2.mathinterpreter.impl.MultiplyImpl <em>Multiply</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.assingment2.mathinterpreter.impl.MultiplyImpl
   * @see org.xtext.assingment2.mathinterpreter.impl.MathinterpreterPackageImpl#getMultiply()
   * @generated
   */
  int MULTIPLY = 22;

  /**
   * The number of structural features of the '<em>Multiply</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLY_FEATURE_COUNT = MULTIPLY_DIVIDE_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.assingment2.mathinterpreter.impl.DivideImpl <em>Divide</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.assingment2.mathinterpreter.impl.DivideImpl
   * @see org.xtext.assingment2.mathinterpreter.impl.MathinterpreterPackageImpl#getDivide()
   * @generated
   */
  int DIVIDE = 23;

  /**
   * The number of structural features of the '<em>Divide</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIVIDE_FEATURE_COUNT = MULTIPLY_DIVIDE_FEATURE_COUNT + 0;


  /**
   * Returns the meta object for class '{@link org.xtext.assingment2.mathinterpreter.Model <em>Model</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Model</em>'.
   * @see org.xtext.assingment2.mathinterpreter.Model
   * @generated
   */
  EClass getModel();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.assingment2.mathinterpreter.Model#getMathexpression <em>Mathexpression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Mathexpression</em>'.
   * @see org.xtext.assingment2.mathinterpreter.Model#getMathexpression()
   * @see #getModel()
   * @generated
   */
  EReference getModel_Mathexpression();

  /**
   * Returns the meta object for class '{@link org.xtext.assingment2.mathinterpreter.MathExpression <em>Math Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Math Expression</em>'.
   * @see org.xtext.assingment2.mathinterpreter.MathExpression
   * @generated
   */
  EClass getMathExpression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.assingment2.mathinterpreter.MathExpression#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see org.xtext.assingment2.mathinterpreter.MathExpression#getExpression()
   * @see #getMathExpression()
   * @generated
   */
  EReference getMathExpression_Expression();

  /**
   * Returns the meta object for class '{@link org.xtext.assingment2.mathinterpreter.Function <em>Function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Function</em>'.
   * @see org.xtext.assingment2.mathinterpreter.Function
   * @generated
   */
  EClass getFunction();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.assingment2.mathinterpreter.Function#getDescription <em>Description</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Description</em>'.
   * @see org.xtext.assingment2.mathinterpreter.Function#getDescription()
   * @see #getFunction()
   * @generated
   */
  EAttribute getFunction_Description();

  /**
   * Returns the meta object for class '{@link org.xtext.assingment2.mathinterpreter.DefineExpr <em>Define Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Define Expr</em>'.
   * @see org.xtext.assingment2.mathinterpreter.DefineExpr
   * @generated
   */
  EClass getDefineExpr();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.assingment2.mathinterpreter.DefineExpr#getVariables <em>Variables</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Variables</em>'.
   * @see org.xtext.assingment2.mathinterpreter.DefineExpr#getVariables()
   * @see #getDefineExpr()
   * @generated
   */
  EReference getDefineExpr_Variables();

  /**
   * Returns the meta object for class '{@link org.xtext.assingment2.mathinterpreter.Variable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Variable</em>'.
   * @see org.xtext.assingment2.mathinterpreter.Variable
   * @generated
   */
  EClass getVariable();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.assingment2.mathinterpreter.Variable#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.assingment2.mathinterpreter.Variable#getName()
   * @see #getVariable()
   * @generated
   */
  EAttribute getVariable_Name();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.assingment2.mathinterpreter.Variable#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see org.xtext.assingment2.mathinterpreter.Variable#getExpression()
   * @see #getVariable()
   * @generated
   */
  EReference getVariable_Expression();

  /**
   * Returns the meta object for class '{@link org.xtext.assingment2.mathinterpreter.External <em>External</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>External</em>'.
   * @see org.xtext.assingment2.mathinterpreter.External
   * @generated
   */
  EClass getExternal();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.assingment2.mathinterpreter.External#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.assingment2.mathinterpreter.External#getName()
   * @see #getExternal()
   * @generated
   */
  EAttribute getExternal_Name();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.assingment2.mathinterpreter.External#getArguments <em>Arguments</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Arguments</em>'.
   * @see org.xtext.assingment2.mathinterpreter.External#getArguments()
   * @see #getExternal()
   * @generated
   */
  EReference getExternal_Arguments();

  /**
   * Returns the meta object for class '{@link org.xtext.assingment2.mathinterpreter.PMExpression <em>PM Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>PM Expression</em>'.
   * @see org.xtext.assingment2.mathinterpreter.PMExpression
   * @generated
   */
  EClass getPMExpression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.assingment2.mathinterpreter.PMExpression#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see org.xtext.assingment2.mathinterpreter.PMExpression#getLeft()
   * @see #getPMExpression()
   * @generated
   */
  EReference getPMExpression_Left();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.assingment2.mathinterpreter.PMExpression#getOperator <em>Operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Operator</em>'.
   * @see org.xtext.assingment2.mathinterpreter.PMExpression#getOperator()
   * @see #getPMExpression()
   * @generated
   */
  EReference getPMExpression_Operator();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.assingment2.mathinterpreter.PMExpression#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see org.xtext.assingment2.mathinterpreter.PMExpression#getRight()
   * @see #getPMExpression()
   * @generated
   */
  EReference getPMExpression_Right();

  /**
   * Returns the meta object for class '{@link org.xtext.assingment2.mathinterpreter.MDExpression <em>MD Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>MD Expression</em>'.
   * @see org.xtext.assingment2.mathinterpreter.MDExpression
   * @generated
   */
  EClass getMDExpression();

  /**
   * Returns the meta object for class '{@link org.xtext.assingment2.mathinterpreter.PowExpression <em>Pow Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Pow Expression</em>'.
   * @see org.xtext.assingment2.mathinterpreter.PowExpression
   * @generated
   */
  EClass getPowExpression();

  /**
   * Returns the meta object for class '{@link org.xtext.assingment2.mathinterpreter.Power <em>Power</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Power</em>'.
   * @see org.xtext.assingment2.mathinterpreter.Power
   * @generated
   */
  EClass getPower();

  /**
   * Returns the meta object for class '{@link org.xtext.assingment2.mathinterpreter.PlusMinus <em>Plus Minus</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Plus Minus</em>'.
   * @see org.xtext.assingment2.mathinterpreter.PlusMinus
   * @generated
   */
  EClass getPlusMinus();

  /**
   * Returns the meta object for class '{@link org.xtext.assingment2.mathinterpreter.MultiplyDivide <em>Multiply Divide</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Multiply Divide</em>'.
   * @see org.xtext.assingment2.mathinterpreter.MultiplyDivide
   * @generated
   */
  EClass getMultiplyDivide();

  /**
   * Returns the meta object for class '{@link org.xtext.assingment2.mathinterpreter.Primary <em>Primary</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Primary</em>'.
   * @see org.xtext.assingment2.mathinterpreter.Primary
   * @generated
   */
  EClass getPrimary();

  /**
   * Returns the meta object for class '{@link org.xtext.assingment2.mathinterpreter.VariableName <em>Variable Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Variable Name</em>'.
   * @see org.xtext.assingment2.mathinterpreter.VariableName
   * @generated
   */
  EClass getVariableName();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.assingment2.mathinterpreter.VariableName#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.assingment2.mathinterpreter.VariableName#getName()
   * @see #getVariableName()
   * @generated
   */
  EAttribute getVariableName_Name();

  /**
   * Returns the meta object for class '{@link org.xtext.assingment2.mathinterpreter.Number <em>Number</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Number</em>'.
   * @see org.xtext.assingment2.mathinterpreter.Number
   * @generated
   */
  EClass getNumber();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.assingment2.mathinterpreter.Number#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see org.xtext.assingment2.mathinterpreter.Number#getValue()
   * @see #getNumber()
   * @generated
   */
  EAttribute getNumber_Value();

  /**
   * Returns the meta object for class '{@link org.xtext.assingment2.mathinterpreter.Positive <em>Positive</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Positive</em>'.
   * @see org.xtext.assingment2.mathinterpreter.Positive
   * @generated
   */
  EClass getPositive();

  /**
   * Returns the meta object for class '{@link org.xtext.assingment2.mathinterpreter.Negative <em>Negative</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Negative</em>'.
   * @see org.xtext.assingment2.mathinterpreter.Negative
   * @generated
   */
  EClass getNegative();

  /**
   * Returns the meta object for class '{@link org.xtext.assingment2.mathinterpreter.PMParenthesis <em>PM Parenthesis</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>PM Parenthesis</em>'.
   * @see org.xtext.assingment2.mathinterpreter.PMParenthesis
   * @generated
   */
  EClass getPMParenthesis();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.assingment2.mathinterpreter.PMParenthesis#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see org.xtext.assingment2.mathinterpreter.PMParenthesis#getExpression()
   * @see #getPMParenthesis()
   * @generated
   */
  EReference getPMParenthesis_Expression();

  /**
   * Returns the meta object for class '{@link org.xtext.assingment2.mathinterpreter.DefParenthesis <em>Def Parenthesis</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Def Parenthesis</em>'.
   * @see org.xtext.assingment2.mathinterpreter.DefParenthesis
   * @generated
   */
  EClass getDefParenthesis();

  /**
   * Returns the meta object for class '{@link org.xtext.assingment2.mathinterpreter.Pow <em>Pow</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Pow</em>'.
   * @see org.xtext.assingment2.mathinterpreter.Pow
   * @generated
   */
  EClass getPow();

  /**
   * Returns the meta object for class '{@link org.xtext.assingment2.mathinterpreter.Plus <em>Plus</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Plus</em>'.
   * @see org.xtext.assingment2.mathinterpreter.Plus
   * @generated
   */
  EClass getPlus();

  /**
   * Returns the meta object for class '{@link org.xtext.assingment2.mathinterpreter.Minus <em>Minus</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Minus</em>'.
   * @see org.xtext.assingment2.mathinterpreter.Minus
   * @generated
   */
  EClass getMinus();

  /**
   * Returns the meta object for class '{@link org.xtext.assingment2.mathinterpreter.Multiply <em>Multiply</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Multiply</em>'.
   * @see org.xtext.assingment2.mathinterpreter.Multiply
   * @generated
   */
  EClass getMultiply();

  /**
   * Returns the meta object for class '{@link org.xtext.assingment2.mathinterpreter.Divide <em>Divide</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Divide</em>'.
   * @see org.xtext.assingment2.mathinterpreter.Divide
   * @generated
   */
  EClass getDivide();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  MathinterpreterFactory getMathinterpreterFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link org.xtext.assingment2.mathinterpreter.impl.ModelImpl <em>Model</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.assingment2.mathinterpreter.impl.ModelImpl
     * @see org.xtext.assingment2.mathinterpreter.impl.MathinterpreterPackageImpl#getModel()
     * @generated
     */
    EClass MODEL = eINSTANCE.getModel();

    /**
     * The meta object literal for the '<em><b>Mathexpression</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__MATHEXPRESSION = eINSTANCE.getModel_Mathexpression();

    /**
     * The meta object literal for the '{@link org.xtext.assingment2.mathinterpreter.impl.MathExpressionImpl <em>Math Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.assingment2.mathinterpreter.impl.MathExpressionImpl
     * @see org.xtext.assingment2.mathinterpreter.impl.MathinterpreterPackageImpl#getMathExpression()
     * @generated
     */
    EClass MATH_EXPRESSION = eINSTANCE.getMathExpression();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MATH_EXPRESSION__EXPRESSION = eINSTANCE.getMathExpression_Expression();

    /**
     * The meta object literal for the '{@link org.xtext.assingment2.mathinterpreter.impl.FunctionImpl <em>Function</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.assingment2.mathinterpreter.impl.FunctionImpl
     * @see org.xtext.assingment2.mathinterpreter.impl.MathinterpreterPackageImpl#getFunction()
     * @generated
     */
    EClass FUNCTION = eINSTANCE.getFunction();

    /**
     * The meta object literal for the '<em><b>Description</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FUNCTION__DESCRIPTION = eINSTANCE.getFunction_Description();

    /**
     * The meta object literal for the '{@link org.xtext.assingment2.mathinterpreter.impl.DefineExprImpl <em>Define Expr</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.assingment2.mathinterpreter.impl.DefineExprImpl
     * @see org.xtext.assingment2.mathinterpreter.impl.MathinterpreterPackageImpl#getDefineExpr()
     * @generated
     */
    EClass DEFINE_EXPR = eINSTANCE.getDefineExpr();

    /**
     * The meta object literal for the '<em><b>Variables</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DEFINE_EXPR__VARIABLES = eINSTANCE.getDefineExpr_Variables();

    /**
     * The meta object literal for the '{@link org.xtext.assingment2.mathinterpreter.impl.VariableImpl <em>Variable</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.assingment2.mathinterpreter.impl.VariableImpl
     * @see org.xtext.assingment2.mathinterpreter.impl.MathinterpreterPackageImpl#getVariable()
     * @generated
     */
    EClass VARIABLE = eINSTANCE.getVariable();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VARIABLE__NAME = eINSTANCE.getVariable_Name();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIABLE__EXPRESSION = eINSTANCE.getVariable_Expression();

    /**
     * The meta object literal for the '{@link org.xtext.assingment2.mathinterpreter.impl.ExternalImpl <em>External</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.assingment2.mathinterpreter.impl.ExternalImpl
     * @see org.xtext.assingment2.mathinterpreter.impl.MathinterpreterPackageImpl#getExternal()
     * @generated
     */
    EClass EXTERNAL = eINSTANCE.getExternal();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXTERNAL__NAME = eINSTANCE.getExternal_Name();

    /**
     * The meta object literal for the '<em><b>Arguments</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXTERNAL__ARGUMENTS = eINSTANCE.getExternal_Arguments();

    /**
     * The meta object literal for the '{@link org.xtext.assingment2.mathinterpreter.impl.PMExpressionImpl <em>PM Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.assingment2.mathinterpreter.impl.PMExpressionImpl
     * @see org.xtext.assingment2.mathinterpreter.impl.MathinterpreterPackageImpl#getPMExpression()
     * @generated
     */
    EClass PM_EXPRESSION = eINSTANCE.getPMExpression();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PM_EXPRESSION__LEFT = eINSTANCE.getPMExpression_Left();

    /**
     * The meta object literal for the '<em><b>Operator</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PM_EXPRESSION__OPERATOR = eINSTANCE.getPMExpression_Operator();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PM_EXPRESSION__RIGHT = eINSTANCE.getPMExpression_Right();

    /**
     * The meta object literal for the '{@link org.xtext.assingment2.mathinterpreter.impl.MDExpressionImpl <em>MD Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.assingment2.mathinterpreter.impl.MDExpressionImpl
     * @see org.xtext.assingment2.mathinterpreter.impl.MathinterpreterPackageImpl#getMDExpression()
     * @generated
     */
    EClass MD_EXPRESSION = eINSTANCE.getMDExpression();

    /**
     * The meta object literal for the '{@link org.xtext.assingment2.mathinterpreter.impl.PowExpressionImpl <em>Pow Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.assingment2.mathinterpreter.impl.PowExpressionImpl
     * @see org.xtext.assingment2.mathinterpreter.impl.MathinterpreterPackageImpl#getPowExpression()
     * @generated
     */
    EClass POW_EXPRESSION = eINSTANCE.getPowExpression();

    /**
     * The meta object literal for the '{@link org.xtext.assingment2.mathinterpreter.impl.PowerImpl <em>Power</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.assingment2.mathinterpreter.impl.PowerImpl
     * @see org.xtext.assingment2.mathinterpreter.impl.MathinterpreterPackageImpl#getPower()
     * @generated
     */
    EClass POWER = eINSTANCE.getPower();

    /**
     * The meta object literal for the '{@link org.xtext.assingment2.mathinterpreter.impl.PlusMinusImpl <em>Plus Minus</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.assingment2.mathinterpreter.impl.PlusMinusImpl
     * @see org.xtext.assingment2.mathinterpreter.impl.MathinterpreterPackageImpl#getPlusMinus()
     * @generated
     */
    EClass PLUS_MINUS = eINSTANCE.getPlusMinus();

    /**
     * The meta object literal for the '{@link org.xtext.assingment2.mathinterpreter.impl.MultiplyDivideImpl <em>Multiply Divide</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.assingment2.mathinterpreter.impl.MultiplyDivideImpl
     * @see org.xtext.assingment2.mathinterpreter.impl.MathinterpreterPackageImpl#getMultiplyDivide()
     * @generated
     */
    EClass MULTIPLY_DIVIDE = eINSTANCE.getMultiplyDivide();

    /**
     * The meta object literal for the '{@link org.xtext.assingment2.mathinterpreter.impl.PrimaryImpl <em>Primary</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.assingment2.mathinterpreter.impl.PrimaryImpl
     * @see org.xtext.assingment2.mathinterpreter.impl.MathinterpreterPackageImpl#getPrimary()
     * @generated
     */
    EClass PRIMARY = eINSTANCE.getPrimary();

    /**
     * The meta object literal for the '{@link org.xtext.assingment2.mathinterpreter.impl.VariableNameImpl <em>Variable Name</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.assingment2.mathinterpreter.impl.VariableNameImpl
     * @see org.xtext.assingment2.mathinterpreter.impl.MathinterpreterPackageImpl#getVariableName()
     * @generated
     */
    EClass VARIABLE_NAME = eINSTANCE.getVariableName();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VARIABLE_NAME__NAME = eINSTANCE.getVariableName_Name();

    /**
     * The meta object literal for the '{@link org.xtext.assingment2.mathinterpreter.impl.NumberImpl <em>Number</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.assingment2.mathinterpreter.impl.NumberImpl
     * @see org.xtext.assingment2.mathinterpreter.impl.MathinterpreterPackageImpl#getNumber()
     * @generated
     */
    EClass NUMBER = eINSTANCE.getNumber();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NUMBER__VALUE = eINSTANCE.getNumber_Value();

    /**
     * The meta object literal for the '{@link org.xtext.assingment2.mathinterpreter.impl.PositiveImpl <em>Positive</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.assingment2.mathinterpreter.impl.PositiveImpl
     * @see org.xtext.assingment2.mathinterpreter.impl.MathinterpreterPackageImpl#getPositive()
     * @generated
     */
    EClass POSITIVE = eINSTANCE.getPositive();

    /**
     * The meta object literal for the '{@link org.xtext.assingment2.mathinterpreter.impl.NegativeImpl <em>Negative</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.assingment2.mathinterpreter.impl.NegativeImpl
     * @see org.xtext.assingment2.mathinterpreter.impl.MathinterpreterPackageImpl#getNegative()
     * @generated
     */
    EClass NEGATIVE = eINSTANCE.getNegative();

    /**
     * The meta object literal for the '{@link org.xtext.assingment2.mathinterpreter.impl.PMParenthesisImpl <em>PM Parenthesis</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.assingment2.mathinterpreter.impl.PMParenthesisImpl
     * @see org.xtext.assingment2.mathinterpreter.impl.MathinterpreterPackageImpl#getPMParenthesis()
     * @generated
     */
    EClass PM_PARENTHESIS = eINSTANCE.getPMParenthesis();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PM_PARENTHESIS__EXPRESSION = eINSTANCE.getPMParenthesis_Expression();

    /**
     * The meta object literal for the '{@link org.xtext.assingment2.mathinterpreter.impl.DefParenthesisImpl <em>Def Parenthesis</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.assingment2.mathinterpreter.impl.DefParenthesisImpl
     * @see org.xtext.assingment2.mathinterpreter.impl.MathinterpreterPackageImpl#getDefParenthesis()
     * @generated
     */
    EClass DEF_PARENTHESIS = eINSTANCE.getDefParenthesis();

    /**
     * The meta object literal for the '{@link org.xtext.assingment2.mathinterpreter.impl.PowImpl <em>Pow</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.assingment2.mathinterpreter.impl.PowImpl
     * @see org.xtext.assingment2.mathinterpreter.impl.MathinterpreterPackageImpl#getPow()
     * @generated
     */
    EClass POW = eINSTANCE.getPow();

    /**
     * The meta object literal for the '{@link org.xtext.assingment2.mathinterpreter.impl.PlusImpl <em>Plus</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.assingment2.mathinterpreter.impl.PlusImpl
     * @see org.xtext.assingment2.mathinterpreter.impl.MathinterpreterPackageImpl#getPlus()
     * @generated
     */
    EClass PLUS = eINSTANCE.getPlus();

    /**
     * The meta object literal for the '{@link org.xtext.assingment2.mathinterpreter.impl.MinusImpl <em>Minus</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.assingment2.mathinterpreter.impl.MinusImpl
     * @see org.xtext.assingment2.mathinterpreter.impl.MathinterpreterPackageImpl#getMinus()
     * @generated
     */
    EClass MINUS = eINSTANCE.getMinus();

    /**
     * The meta object literal for the '{@link org.xtext.assingment2.mathinterpreter.impl.MultiplyImpl <em>Multiply</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.assingment2.mathinterpreter.impl.MultiplyImpl
     * @see org.xtext.assingment2.mathinterpreter.impl.MathinterpreterPackageImpl#getMultiply()
     * @generated
     */
    EClass MULTIPLY = eINSTANCE.getMultiply();

    /**
     * The meta object literal for the '{@link org.xtext.assingment2.mathinterpreter.impl.DivideImpl <em>Divide</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.assingment2.mathinterpreter.impl.DivideImpl
     * @see org.xtext.assingment2.mathinterpreter.impl.MathinterpreterPackageImpl#getDivide()
     * @generated
     */
    EClass DIVIDE = eINSTANCE.getDivide();

  }

} //MathinterpreterPackage
